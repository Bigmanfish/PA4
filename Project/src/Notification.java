/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
/**
 *
 * @author Igbob
 */
public class Notification extends javax.swing.JFrame {

    /**
     * Creates new form Notification
     */
    public Notification() {
        initComponents();
        DatabaseConnection db = new DatabaseConnection();
        ResultSet rs = db.displayClient();
        clientTable.setModel(DbUtils.resultSetToTableModel(rs));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        clientTable = new javax.swing.JTable();
        insertBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        filterSearch = new javax.swing.JTextField();
        backNotification = new javax.swing.JButton();
        drop_rental = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Notification");

        clientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "customer_id", "store_id", "first_name", "last_name", "email", "address_id", "active", "create_date", "last_update"
            }
        ));
        jScrollPane1.setViewportView(clientTable);

        insertBtn.setText("Create");
        insertBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertBtnActionPerformed(evt);
            }
        });

        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        filterSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterSearchActionPerformed(evt);
            }
        });
        filterSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                filterSearchKeyReleased(evt);
            }
        });

        backNotification.setText("MAIN MENU");
        backNotification.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backNotificationActionPerformed(evt);
            }
        });

        drop_rental.setText("Dropped_rental");
        drop_rental.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drop_rentalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(272, 272, 272)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(302, 302, 302)
                        .addComponent(backNotification))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(insertBtn)
                                .addGap(84, 84, 84)
                                .addComponent(updateBtn)
                                .addGap(163, 163, 163)
                                .addComponent(deleteBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(drop_rental))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 645, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(302, 302, 302)
                        .addComponent(filterSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateBtn)
                    .addComponent(deleteBtn)
                    .addComponent(insertBtn)
                    .addComponent(drop_rental))
                .addGap(18, 18, 18)
                .addComponent(filterSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(backNotification)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void insertBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertBtnActionPerformed
        int store = Integer.parseInt(JOptionPane.showInputDialog(this,"Input the id of the store you work in."));
        String fName = JOptionPane.showInputDialog(this,"Input your first name.");
        String lName = JOptionPane.showInputDialog(this,"Input your last name.");
        String email = JOptionPane.showInputDialog(this,"Input your email address.");
        int aID = Integer.parseInt(JOptionPane.showInputDialog(this,"Input the id of the address you stay at."));
        int active = Integer.parseInt(JOptionPane.showInputDialog(this,"Input whether you are active or not."));
        DatabaseConnection db = new DatabaseConnection();
        db.insertClient(store, fName, lName, email, aID, active);
        ResultSet rs = db.displayClient();
        clientTable.setModel(DbUtils.resultSetToTableModel(rs));
    }//GEN-LAST:event_insertBtnActionPerformed

    private void filterSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filterSearchActionPerformed

    private void backNotificationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backNotificationActionPerformed
        Menu m = new Menu();
        m.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backNotificationActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        int id = Integer.parseInt(JOptionPane.showInputDialog(this,"Input the id of customer you want to delete."));
        DatabaseConnection db = new DatabaseConnection();
        db.deleteClient(id);
        ResultSet rs = db.displayClient();
        clientTable.setModel(DbUtils.resultSetToTableModel(rs));
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        int cID = Integer.parseInt(JOptionPane.showInputDialog(this, "Enter the ID of the customer."));
        String[] choices = {"store id","first name", "last name", "email", "address id", "active"};
        int x = JOptionPane.showOptionDialog(this, "Please select the details that you want to change.",
                "Click a button",
                JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, choices, choices[0]);
        String opt = choices[x];
        String nValue = JOptionPane.showInputDialog(this, "Enter the new " + opt + " for the customer");
        DatabaseConnection db = new DatabaseConnection();
        db.updateClient(cID, opt, nValue);
        ResultSet rs = db.displayClient();
        clientTable.setModel(DbUtils.resultSetToTableModel(rs));
    }//GEN-LAST:event_updateBtnActionPerformed

    private void filterSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_filterSearchKeyReleased
        DatabaseConnection db = new DatabaseConnection();
            ResultSet rs = db.displayforFilter(filterSearch.getText());
            clientTable.setModel(DbUtils.resultSetToTableModel(rs));
    }//GEN-LAST:event_filterSearchKeyReleased

    private void drop_rentalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drop_rentalActionPerformed
        DatabaseConnection db = new DatabaseConnection();
        ResultSet rs = db.displaydrop();
        clientTable.setModel(DbUtils.resultSetToTableModel(rs));
    }//GEN-LAST:event_drop_rentalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Notification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Notification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Notification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Notification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Notification().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backNotification;
    private javax.swing.JTable clientTable;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton drop_rental;
    private javax.swing.JTextField filterSearch;
    private javax.swing.JButton insertBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
